GitHub : https://github.com/ng196/DSA-BASICS.git

P1 : 

'''
Problem Statement : Given a list of dominoes, dominoes[i] = [a, b] is equivalent to dominoes[j] = [c, d] if and only if either (a == c and b == d), or (a == d and b == c) - that is, one domino can be rotated to be equal to another domino.

Return the number of pairs (i, j) for which 0 <= i < j < dominoes.length, and dominoes[i] is equivalent to dominoes[j].

 

Example 1:

Input: dominoes = [[1,2],[2,1],[3,4],[5,6]]
Output: 1
Example 2:

Input: dominoes = [[1,2],[1,2],[1,1],[1,2],[2,2]]
Output: 3
'''

approach : Approach : made a defaultdict , that will count frequency of each pair , iterate over given list after sorting it , and if there already exists the key , then add it , and increase the frequency by 1 

Time Complexity: O(n)
Space Complexity: O(n)



P2 :

Problem statement : Given an n x n binary matrix image, flip the image horizontally, then invert it, and return the resulting image.

To flip an image horizontally means that each row of the image is reversed.

For example, flipping [1,1,0] horizontally results in [0,1,1].
To invert an image means that each 0 is replaced by 1, and each 1 is replaced by 0.

For example, inverting [0,1,1] results in [1,0,0].
 

Example 1:

Input: image = [[1,1,0],[1,0,1],[0,0,0]]
Output: [[1,0,0],[0,1,0],[1,1,1]]

'''
Complexity  : 
Time Complexity: O(MN)
Space Complexity: O(1)

'''     

Approach : did what was asked to do and then returned the resulting image.

        
            